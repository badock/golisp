{"version":3,"sources":["./src/environments/environment.ts","./src/app/lisp.service.ts","./src/app/app.component.html","./src/app/app.component.ts","./src/app/app.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LispService {\n\n  examples = {\n    addition: \"(+ 1 2)\",\n    comparison: \"(> 1 0)\",\n    condition: \"(if (> 1 0) 1 0)\",\n    createList: \"(setq toto (+ 1 2))\",\n    immutableList: \"(cons 1 (cons 2 (cons 3 NIL)))\",\n    functionDefinitionWithComments: \"(defun multiply_by_seven (number) \\\"Multiply NUMBER by seven.\\\" (* 7 number))\",\n    highOrderFunction: \"(defun multiply_by_seven (number) (* 7 number)(* 7 number))\\n(multiply_by_seven 8)\",\n    simpleRecursive: \"(defun add (a b)\\n\" +\n      \"  (if (> a 0)\\n\" +\n      \"      (add (- a 1) (+ b 1))\\n\" +\n      \"      b\\n\" +\n      \"  )\\n\" +\n      \")\\n\" +\n      \"(add 10 5)\",\n    recursiveFunction: \"(defun list_length_ (list n)\\n\" +\n      \"  (if list (list_length_ (cdr list) (+ n 1) ) n)\\n\" +\n      \")\\n\" +\n      \"(defun list_length (list) \\n\" +\n      \"  (list_length_ list 0)\\n\" +\n      \")\\n\" +\n      \"(list_length '(1 2 3 4))\"}\n\n  constructor(private http: HttpClient) { }\n\n  evalLispCode(lispCode: string) {\n\n    const formData = new FormData();\n    formData.append('expression', lispCode);\n\n    let url = \"http://localhost:8080/lispgo\";\n    // url = \"https://api.golisp.jonathanpastor.fr/lispgo\";\n\n    return this.http.post(url, formData, {})\n  }\n\n  getExamples = () => {\n    return this.examples;\n  }\n\n}\n","<html xmlns=\"http://www.w3.org/1999/html\">\n<head>\n  <link href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css\" rel=\"stylesheet\"\n        crossorigin=\"anonymous\">\n  <script src=\"https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/js/bootstrap.bundle.min.js\"\n          crossorigin=\"anonymous\"></script>\n  <title>GoLisp</title>\n</head>\n<body>\n\n<div class=\"container\">\n  <div class=\"row\">\n    <div class=\"col\">\n      <div class=\"card\" style=\"margin-bottom: 20px;\">\n        <div class=\"card-header\">\n          Lisp editor\n        </div>\n        <div class=\"card-body\">\n          <ngx-codemirror\n            [(ngModel)]=\"lispCode\"\n            [options]=\"{\n              lineNumbers: true,\n              mode: 'commonlisp'\n            }\"\n          ></ngx-codemirror>\n        </div>\n      </div>\n    </div>\n    <div class=\"col\">\n\n      <div class=\"card\" style=\"margin-bottom: 20px;\">\n        <div class=\"card-header\">\n          Actions\n        </div>\n        <div class=\"card-body\">\n          <div class=\"row\">\n            <div class=\"col-3\">\n              <button class=\"btn btn-primary\" (click)=\"runCode()\">run</button>\n            </div>\n            <div class=\"col-9\">\n              <div class=\"input-group\">\n                <span class=\"input-group-text\">Examples</span>\n                <select class=\"form-select\" [(ngModel)]=\"selectedExample\" (change)=\"selectedExampleHasChanged()\">\n                  <option *ngFor=\"let exampleName of exampleNames\">{{exampleName}}</option>\n                </select>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <div class=\"card\" style=\"margin-bottom: 20px;\">\n        <div class=\"card-header\">\n          Output\n        </div>\n        <div class=\"card-body\">\n          <textarea [textContent]=\"resultExpression\"></textarea>\n        </div>\n      </div>\n\n    </div>\n  </div>\n</div>\n<!-- Create a simple CodeMirror instance -->\n<script>\n  var editor = CodeMirror.fromTextArea(myTextarea, {\n    lineNumbers: true\n  });\n</script>\n</body>\n</html>\n","import { Component } from '@angular/core';\nimport {LispService} from \"./lisp.service\";\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'webapp';\n\n  lispCode = \"\";\n  selectedExample = \"\";\n  resultExpression = \"\";\n  lispService: LispService;\n  exampleNames = [];\n\n  constructor(lispService: LispService) {\n    this.lispService = lispService\n    this.exampleNames = Object.keys(lispService.examples);\n\n    if (this.exampleNames.length > 0) {\n      this.selectedExample = this.exampleNames[0];\n      this.selectedExampleHasChanged();\n    }\n  }\n\n  runCode = () => {\n    console.log(\"I will run the following expression:\");\n    console.log(this.lispCode);\n    let lispCodeWithoutNewLines = this.lispCode.split(\"\\n\").join(\"\");\n    this.lispService.evalLispCode(lispCodeWithoutNewLines).subscribe((result) => {\n      // @ts-ignore\n      this.resultExpression = `${result.result}`\n    })\n  }\n\n  selectedExampleHasChanged = () => {\n    console.log(`selectedExample => ${this.selectedExample}`);\n    this.lispCode = this.lispService.examples[this.selectedExample];\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\n\nimport { AppComponent } from './app.component';\nimport {HttpClientModule} from \"@angular/common/http\";\nimport { CodemirrorModule } from '@ctrl/ngx-codemirror';\nimport { FormsModule } from '@angular/forms';\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    HttpClientModule,\n    FormsModule,\n    CodemirrorModule,\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nimport 'codemirror/mode/javascript/javascript';\nimport 'codemirror/mode/commonlisp/commonlisp';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}